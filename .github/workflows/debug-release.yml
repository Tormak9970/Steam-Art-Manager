name: Release Candidate

on:
  push:
    branches:
      - "release-candidate"

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}
      change_log: ${{ steps.changelog.outputs.changelog }}
      version: ${{ steps.changelog.outputs.version }}
      tag: ${{ steps.changelog.outputs.tag }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: release-candidate

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Generate Changelog for Release
        id: changelog
        uses: Tormak9970/reliable-changelog@v2
        with:
          github-token: ${{ secrets.github_token }}
          tag-prefix: "rc-"
          git-branch: "release-candidate"
          current-version: "./package.json"
          version-path: "version"
          patch-version-bump-interval: "10"

      - name: Create Release
        id: create-release
        uses: actions/github-script@v6
        env:
          RELEASE_TAG: ${{ steps.changelog.outputs.tag }}
          RELEASE_LOG: ${{ steps.changelog.outputs.changelog }}
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: process.env.RELEASE_TAG,
              name: `SARM ${process.env.RELEASE_TAG}`,
              body: `${process.env.RELEASE_LOG}`,
              draft: true,
              prerelease: true
            });
            return data.id

  build-tauri:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-22.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: release-candidate

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install Dependencies (Linux Only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install Frontend Dependencies
        run: bun install

      - name: Build App
        uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_PRIVATE_KEY_PASSWORD }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}
          tagName: ${{ needs.create-release.outputs.tag }}
          releaseBody: "Check Github for the release notes!"
          releaseDraft: true
          includeUpdaterJson: false
          tauriScript: "bun tauri"
            
  publish-release:
    needs: [create-release, build-tauri]
    permissions:
      contents: write
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: release-candidate

      - name: Update Release Assets
        uses: ./.github/workflows/create-release-assets
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          release_id: ${{ needs.create-release.outputs.release_id }}
          release_tag: ${{ needs.create-release.outputs.tag }}
          git_branch: "release-candidate"
          change_log: ${{ needs.create-release.outputs.change_log }}

      - name: Publish Release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: true
            })
  
